<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>imr-par-poller</artifactId>
    <groupId>com.comp.imr</groupId>
    <version>1.0.16</version>
    <packaging>jar</packaging>
    <name>IMR parallel poller Core</name>

    <description>Main purpose it to run pollers for the different tasks in imr.</description>
    <issueManagement>
        <system>Jira</system>
        <url>http://tomcatstage1:9090/secure/Dashboard.jspa</url>
    </issueManagement>
    <scm>
        <url>https://svnserver/svn/repository/IMR/Middleware/Imrpoller/core/</url>
    </scm>

    <properties>
        <gmaven.version>1.3</gmaven.version>
        <groovy.version>1.8.0</groovy.version>
        <!-- Need to ensure Groovy test cases work as expected -->
        <maven.test.search.classdir>true</maven.test.search.classdir>
        <!-- Default environment, user must go out of their way to enable other profiles -->
        <env>dev</env>
    </properties>
    <profiles>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
            <version>0.5.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ccil.cowan.tagsoup</groupId>
            <artifactId>tagsoup</artifactId>
            <version>1.2.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version> <!-- 2.0.1 is newest version -->
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.springsource.oracle.jdbc</groupId>
            <artifactId>oracle.jdbc</artifactId>
            <version>10.2.0.2</version>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>3.2.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.49</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.9</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.8</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-mail</artifactId>
            <version>2.2.3.RELEASE</version>
        </dependency>

    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <!--
            Set up filters to filter properties files but leave XML files alone
         -->
        <resources>
            <resource>
                <excludes>
                    <exclude>**/*.xml</exclude>
                </excludes>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Handles the copying of project resources to the output directory. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <escapeWindowsPaths>true</escapeWindowsPaths>
                    <useBuildFilters>false</useBuildFilters>
                </configuration>
            </plugin>
            <!-- Compiler adjusted so it will also compile Groovy code. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerId>groovy-eclipse-compiler</compilerId>
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-compiler</artifactId>
                        <version>2.5.1</version>
                        <exclusions>
                            <exclusion>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-eclipse-batch</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-batch</artifactId>
                        <version>1.8.0-02</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Used during the test phase of the build lifecycle to execute the unit tests of an application. -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
            </plugin>
            <!-- transforms XML files by applying XSLT stylesheets. For TagSoup to make it ACES/PIES aware. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>setup.properties</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>src/main/tagsoup/definitions/tssl</dir>
                            <stylesheet>src/main/tagsoup/xslt/tssl-models.xslt</stylesheet>
                            <includes>
                                <pattern>*.tssl</pattern>
                            </includes>
                            <fileMappers>
                                <fileMapper
                                        implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.model</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/tagsoup/definitions/tssl</dir>
                            <stylesheet>src/main/tagsoup/xslt/tssl.xslt</stylesheet>
                            <includes>
                                <pattern>*.tssl</pattern>
                            </includes>
                            <fileMappers>
                                <fileMapper
                                        implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.schema</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>saxon</artifactId>
                        <version>8.7</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!--
                 This is not the ideal way to do this. The better way would be to use Maven's copy-resources
                 and use filtering. I am just not sure how to load the text from the patch files into a property
                 like Ant's loadfile does.
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>setup.workspace</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <!-- Prepare TagSoup to be ACES/PIES aware.  -->
                            <tasks>
                                <echo>You are in Environment: ${env}</echo>
                             </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>compile</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <!--  Run Groovy Docs so we have APIs for our Groovy source. -->
                                <property name="compile_classpath" refid="maven.compile.classpath"/>
                                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                                <!--suppress MavenModelInspection -->
                                <taskdef name="groovydoc" classname="org.codehaus.groovy.ant.Groovydoc"
                                         classpath="${runtime_classpath}"/>
                                <groovydoc
                                        destdir="${project.basedir}/target/site/gapidocs"
                                        sourcepath="${project.basedir}/src/main/groovy"
                                        packagenames="**.*"
                                        use="true"
                                        private="false">
                                    <link packages="java.,org.xml.,javax.,org.xml."
                                          href="http://java.sun.com/j2se/1.5.0/docs/api"/>
                                    <link packages="org.apache.ant.,org.apache.tools.ant."
                                          href="http://www.dpml.net/api/ant/1.7.0"/>
                                    <link packages="org.junit.,junit.framework."
                                          href="http://junit.sourceforge.net/junit4.10/javadoc/"/>
                                    <link packages="groovy.,org.codehaus.groovy."
                                          href="http://groovy.codehaus.org/api/"/>
                                </groovydoc>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-launcher</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-apache-bsf</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!-- Ensure that our tagsoup generated sources are found. -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <!--suppress MavenModelInspection -->
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/tagsoup</source>
                                <source>src/main/groovy</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/groovy</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>site</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createSourcesJar>true</createSourcesJar>
                            <minimizeJar>false</minimizeJar>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.epicor.CmdLine</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.tooling</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Package our app creating a normal jar and a jar with dependencies. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.epicor.CmdLine</mainClass>
                        </manifest>
                    </archive>
                    <!--
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                        <descriptorRef>src</descriptorRef>
                    </descriptorRefs>
                    -->
                </configuration>
                <executions>
                    <!--
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    -->
                    <!-- Needed our own assembly to ensure our bin gets all the files we want -->
                    <!--
                    <execution>
                        <id>bin-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>src/main/assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <remoteRepositories>
                        <!-- <repository>
                            <id>comp.central</id>
                            <name>Epicor's Automotive Catalog Centeral Repository</name>
                            <url>http://svnserver/nexus/content/groups/public/</url>
                            <snapshots>
                                <enabled>false</enabled>
                            </snapshots>
                        </repository> -->
                        <remoteRepository>
                            <id>comp.central</id>
                            <name>Epicor's Automotive Catalog Centeral Repository</name>
                            <url>http://svnserver/nexus/content/groups/public/</url>
                            <snapshots>
                                <enabled>false</enabled>
                            </snapshots>
                        </remoteRepository>
                    </remoteRepositories>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <distributionManagement>
        <!-- Drop the jar, pom, and checksum to the local repository -->
        <repository>
            <id>comp.central</id>
            <name>Release to Epicor Maven Central Repository</name>
            <url>http://mvnserver/nexus/content/repositories/catalog-release-local</url>
            <layout>default</layout>
        </repository>
    </distributionManagement>
    <repositories>
        <!--  -->
        <repository>
            <id>comp.central</id>
            <name>Epicor's Automotive Catalog Central Repository</name>
            <url>http://mvnserver/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
